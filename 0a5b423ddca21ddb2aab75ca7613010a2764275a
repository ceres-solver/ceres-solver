{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "421866c6_85987c3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5010
      },
      "writtenOn": "2025-06-13T23:24:28Z",
      "side": 1,
      "message": "Let me give this some more thought.\n\nSameer\n\nOn Fri, Jun 13, 2025, 4:13â€¯PM Sergiu Deitsch (Gerrit) \u003cnoreply-gerritcodereview+2IOHGVqgDrG06rZMyMfMjw\u003d\u003d@\u003e wrote: google.com",
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b18b9007_c43247e4",
        "filename": "include/ceres/manifold_test_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 5002
      },
      "writtenOn": "2025-06-13T22:36:36Z",
      "side": 1,
      "message": "I am not fond of this change in this matcher.\n\nPreviously the matcher was type agnostic, but now its looking at the type and doing non-trivial work. This makes the callsite, a bit deceptive. I think it is better to have quaternion specific matcher, which knows that its dealing with quaternions.",
      "range": {
        "startLine": 219,
        "startChar": 20,
        "endLine": 219,
        "endChar": 21
      },
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00bb21fe_a1eff937",
        "filename": "include/ceres/manifold_test_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 6612
      },
      "writtenOn": "2025-06-13T23:13:48Z",
      "side": 1,
      "message": "The matcher is still type agnostic and only uses a different comparison logic for two specific manifold types. Think of an overload or a specialization.\n\nIntroducing a completely new matcher would result in significant code duplication, which I wanted to avoid. Ideally, we would overload the matcher to better split the code. However, I was not able to find a way to make matchers with the same name type-dependent.",
      "parentUuid": "b18b9007_c43247e4",
      "range": {
        "startLine": 219,
        "startChar": 20,
        "endLine": 219,
        "endChar": 21
      },
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5edd6def_15d16280",
        "filename": "include/ceres/manifold_test_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 5002
      },
      "writtenOn": "2025-06-16T12:58:21Z",
      "side": 1,
      "message": "So the issue as I understand it is that Quaternions are a double covering in that q and -q represent the same object/rotation and thus the need to do this computation in a specialized manner.",
      "parentUuid": "00bb21fe_a1eff937",
      "range": {
        "startLine": 219,
        "startChar": 20,
        "endLine": 219,
        "endChar": 21
      },
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66cfb319_ec69753c",
        "filename": "include/ceres/manifold_test_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 6612
      },
      "writtenOn": "2025-06-16T21:24:25Z",
      "side": 1,
      "message": "Correct.",
      "parentUuid": "5edd6def_15d16280",
      "range": {
        "startLine": 219,
        "startChar": 20,
        "endLine": 219,
        "endChar": 21
      },
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28c7cec5_f7e08213",
        "filename": "include/ceres/manifold_test_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 6612
      },
      "writtenOn": "2025-06-12T19:37:40Z",
      "side": 1,
      "message": "Should we possibly use this check consistently instead of the coefficient-wise comparison performed by the `IsNearQuaternion` matcher (or the other way around)?",
      "range": {
        "startLine": 239,
        "startChar": 4,
        "endLine": 263,
        "endChar": 19
      },
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f796a80_7ab57612",
        "filename": "include/ceres/rotation.h",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 5002
      },
      "writtenOn": "2025-06-13T22:36:36Z",
      "side": 1,
      "message": "don\u0027t you want the order of the template parameters to be the reverse? where the required parameter comes first, and the defaulted one comes after?",
      "range": {
        "startLine": 104,
        "startChar": 26,
        "endLine": 104,
        "endChar": 27
      },
      "fixSuggestions": [
        {
          "fixId": "d8b6c0e3_cf6d9116",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 104,
                "startChar": 0,
                "endLine": 105,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 113,
                "startChar": 0,
                "endLine": 114,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 119,
                "startChar": 0,
                "endLine": 120,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 122,
                "startChar": 0,
                "endLine": 124,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T,\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 125,
                "startChar": 0,
                "endLine": 126,
                "endChar": 0
              },
              "replacement": "          int col_stride,\n          typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 243,
                "startChar": 0,
                "endLine": 244,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 246,
                "startChar": 0,
                "endLine": 248,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T,\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 249,
                "startChar": 0,
                "endLine": 250,
                "endChar": 0
              },
              "replacement": "          int col_stride,\n          typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 257,
                "startChar": 0,
                "endLine": 258,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 260,
                "startChar": 0,
                "endLine": 262,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T,\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 263,
                "startChar": 0,
                "endLine": 264,
                "endChar": 0
              },
              "replacement": "          int col_stride,\n          typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 278,
                "startChar": 0,
                "endLine": 279,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 286,
                "startChar": 0,
                "endLine": 287,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 294,
                "startChar": 0,
                "endLine": 295,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 300,
                "startChar": 0,
                "endLine": 301,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order \u003d CeresQuaternionOrder\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 345,
                "startChar": 0,
                "endLine": 346,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 375,
                "startChar": 0,
                "endLine": 376,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 420,
                "startChar": 0,
                "endLine": 421,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 427,
                "startChar": 0,
                "endLine": 428,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, int row_stride, int col_stride, typename Order\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 698,
                "startChar": 0,
                "endLine": 699,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 703,
                "startChar": 0,
                "endLine": 704,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, int row_stride, int col_stride, typename Order\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 731,
                "startChar": 0,
                "endLine": 732,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 736,
                "startChar": 0,
                "endLine": 737,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, int row_stride, int col_stride, typename Order\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 752,
                "startChar": 0,
                "endLine": 753,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 774,
                "startChar": 0,
                "endLine": 775,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 794,
                "startChar": 0,
                "endLine": 795,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order\u003e\n"
            },
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 807,
                "startChar": 0,
                "endLine": 808,
                "endChar": 0
              },
              "replacement": "template \u003ctypename T, typename Order\u003e\n"
            }
          ]
        }
      ],
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b1b71a2_95ace5ee",
        "filename": "include/ceres/rotation.h",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 6612
      },
      "writtenOn": "2025-06-13T23:13:48Z",
      "side": 1,
      "message": "This is intentional to avoid redundancy. Placing `Order` first allows `T` to be deduced automatically from the arguments. Reversing the order of template arguments will lead to unnecessarily longer and less readable code whenever the order must be specified.",
      "parentUuid": "3f796a80_7ab57612",
      "range": {
        "startLine": 104,
        "startChar": 26,
        "endLine": 104,
        "endChar": 27
      },
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67b02d2c_ff9be9cd",
        "filename": "include/ceres/rotation.h",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 5002
      },
      "writtenOn": "2025-06-16T12:58:21Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "9b1b71a2_95ace5ee",
      "range": {
        "startLine": 104,
        "startChar": 26,
        "endLine": 104,
        "endChar": 27
      },
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96fb1760_7bd87208",
        "filename": "include/ceres/rotation.h",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 5002
      },
      "writtenOn": "2025-06-13T22:36:36Z",
      "side": 1,
      "message": "even more so here, don\u0027t you want the quarternionorder to be the very last parameter?",
      "range": {
        "startLine": 122,
        "startChar": 10,
        "endLine": 122,
        "endChar": 18
      },
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbb4152c_f65956cc",
        "filename": "include/ceres/rotation.h",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 6612
      },
      "writtenOn": "2025-06-13T23:13:48Z",
      "side": 1,
      "message": "The way to think about this is that the `Order` always refers to the quaternion and is not tied to the order of different rotation types in function\u0027s name or their arguments. This ensures consistency in the ordering of template arguments regardless of the conversion direction.",
      "parentUuid": "96fb1760_7bd87208",
      "range": {
        "startLine": 122,
        "startChar": 10,
        "endLine": 122,
        "endChar": 18
      },
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2935ba7_e06507af",
        "filename": "include/ceres/rotation.h",
        "patchSetId": 3
      },
      "lineNbr": 297,
      "author": {
        "id": 5002
      },
      "writtenOn": "2025-06-13T22:36:36Z",
      "side": 1,
      "message": "Compute",
      "range": {
        "startLine": 297,
        "startChar": 3,
        "endLine": 297,
        "endChar": 11
      },
      "fixSuggestions": [
        {
          "fixId": "6fabbb55_94f89c33",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "include/ceres/rotation.h",
              "range": {
                "startLine": 297,
                "startChar": 0,
                "endLine": 298,
                "endChar": 0
              },
              "replacement": "// Compute the conjugate of the quaternion q in store it in z.\n"
            }
          ]
        }
      ],
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc909c99_0cda67e1",
        "filename": "include/ceres/rotation.h",
        "patchSetId": 3
      },
      "lineNbr": 297,
      "author": {
        "id": 6612
      },
      "writtenOn": "2025-06-13T23:13:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2935ba7_e06507af",
      "range": {
        "startLine": 297,
        "startChar": 3,
        "endLine": 297,
        "endChar": 11
      },
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31805a48_fc770bad",
        "filename": "internal/ceres/manifold.cc",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 5002
      },
      "writtenOn": "2025-06-13T22:36:36Z",
      "side": 1,
      "message": "this is really nice.",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 21
      },
      "revId": "0a5b423ddca21ddb2aab75ca7613010a2764275a",
      "serverId": "cdcfcfbe-2044-3b1f-b5d4-da77ad542329"
    }
  ]
}